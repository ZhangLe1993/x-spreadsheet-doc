(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{332:function(a,t,s){"use strict";s.r(t);var e=s(33),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"data-proxy-数据驱动核心类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#data-proxy-数据驱动核心类"}},[a._v("#")]),a._v(" data_proxy 数据驱动核心类")]),a._v(" "),s("h2",{attrs:{id:"私有方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#私有方法"}},[a._v("#")]),a._v(" 私有方法")]),a._v(" "),s("h3",{attrs:{id:"canpaste-判断是否可以粘贴"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#canpaste-判断是否可以粘贴"}},[a._v("#")]),a._v(" "),s("code",[a._v("canPaste")]),a._v(" 判断是否可以粘贴")]),a._v(" "),s("p",[a._v("粘贴前调用，用以判断是否可以粘贴")]),a._v(" "),s("p",[s("code",[a._v("@param {Object}")]),a._v(" src 由 cellRange 包装的对象，源单元格")]),a._v(" "),s("p",[s("code",[a._v("@param {Object}")]),a._v(" dst 由 cellRange 包装的对象，目标单元格")]),a._v(" "),s("p",[s("code",[a._v("@param {Function}")]),a._v(" error 错误回调 当目标单元格包含 merge 时调用")]),a._v(" "),s("p",[s("code",[a._v("@returns {boolean}")]),a._v(" 是否可以粘贴")]),a._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("canPaste")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" dst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("error")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 正常返回 Boolean 类型")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 若目标单元格包含 merge 时则调用 error() 并返回 false")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h3",{attrs:{id:"copypaste-粘贴复制的单元格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#copypaste-粘贴复制的单元格"}},[a._v("#")]),a._v(" "),s("code",[a._v("copyPaste")]),a._v(" 粘贴复制的单元格")]),a._v(" "),s("p",[a._v("粘贴复制的单元格时使用，用以将源单元格复制到目标单元格")]),a._v(" "),s("p",[s("code",[a._v("@param {Object}")]),a._v(" srcCellRange 由 cellRange 包装的对象，源单元格")]),a._v(" "),s("p",[s("code",[a._v("@param {Object}")]),a._v(" dstCellRange 由 cellRange 包装的对象，目标单元格")]),a._v(" "),s("p",[s("code",[a._v("@param {String}")]),a._v(" what 复制条件 all 全部 | format 仅格式")]),a._v(" "),s("p",[s("code",[a._v("@param {Boolean}")]),a._v(" autofill 是否自动填充，默认 false")]),a._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("copyPaste")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("srcCellRange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" dstCellRange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" what"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" autofill "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 根据 what 条件")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 调用 rows.copyPaste 进行复制单元格")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h3",{attrs:{id:"cutpaste-粘贴剪切的单元格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cutpaste-粘贴剪切的单元格"}},[a._v("#")]),a._v(" "),s("code",[a._v("cutPaste")]),a._v(" 粘贴剪切的单元格")]),a._v(" "),s("p",[a._v("粘贴剪切的单元格时使用，用以将源单元格复制到目标单元格")]),a._v(" "),s("p",[s("code",[a._v("@param {Object}")]),a._v(" srcCellRange 由 cellRange 包装的对象，源单元格")]),a._v(" "),s("p",[s("code",[a._v("@param {Object}")]),a._v(" dstCellRange 由 cellRange 包装的对象，目标单元格")]),a._v(" "),s("p",[s("code",[a._v("@param {String}")]),a._v(" what 复制条件 all 全部 | format 仅格式")]),a._v(" "),s("p",[s("code",[a._v("@param {Boolean}")]),a._v(" autofill 是否自动填充，默认 false")]),a._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cutPaste")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("srcCellRange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" dstCellRange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 调用 rows.cutPaste 进行粘贴剪切的单元格")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"setstyleborder-设置边框"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setstyleborder-设置边框"}},[a._v("#")]),a._v(" "),s("code",[a._v("setStyleBorder")]),a._v(" 设置边框")]),a._v(" "),s("p",[a._v("设置指定的单元格边框")]),a._v(" "),s("p",[s("code",[a._v("@param {Number}")]),a._v(" ri 行下标")]),a._v(" "),s("p",[s("code",[a._v("@param {Number}")]),a._v(" ci 列下标")]),a._v(" "),s("p",[s("code",[a._v("@param {Object}")]),a._v(" bss 边框样式")]),a._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("setStyleBorder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("ri"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" ci"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" bss")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 将 bss 样式通过 this.addStyle 方法添加到样式数据中，并将返回的样式下标设置到 cell.style 单元格数据中")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"setstyleborders-设置多个单元格边框"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setstyleborders-设置多个单元格边框"}},[a._v("#")]),a._v(" "),s("code",[a._v("setStyleBorders")]),a._v(" 设置多个单元格边框")]),a._v(" "),s("p",[a._v("根据当前选区（this.selector）批量设置多个单元格的边框")]),a._v(" "),s("p",[s("code",[a._v("@param {String}")]),a._v(" mode all 全部 | inside 内边框 | outside 外边框 | horizontal 水平边框 | vertical 竖边框 | none 无边框")]),a._v(" "),s("p",[s("code",[a._v("@param {String}")]),a._v(" style 边框样式")]),a._v(" "),s("p",[s("code",[a._v("@param {String}")]),a._v(" color 边框样式")]),a._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("setStyleBorders")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" color "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 根据 mode 设置边框")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"getcellrowbyy-根据-y-坐标获取行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getcellrowbyy-根据-y-坐标获取行"}},[a._v("#")]),a._v(" "),s("code",[a._v("getCellRowByY")]),a._v(" 根据 Y 坐标获取行")]),a._v(" "),s("p",[a._v("根据 Y 坐标获取所在行的下标")]),a._v(" "),s("p",[s("code",[a._v("@param {Number}")]),a._v(" y Y坐标")]),a._v(" "),s("p",[s("code",[a._v("@param {Number}")]),a._v(" scrollOffsety 滚动条 Offset Y")]),a._v(" "),s("p",[s("code",[a._v("@returns {Object}")]),a._v(" 带有 ri 行下标的对象")]),a._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getCellRowByY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" scrollOffsety")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 根据 Y 坐标返回 { ri, top, height }")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h2",{attrs:{id:"dataproxy-类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dataproxy-类"}},[a._v("#")]),a._v(" DataProxy 类")]),a._v(" "),s("p",[a._v("补充中……")])])}),[],!1,null,null,null);t.default=n.exports}}]);